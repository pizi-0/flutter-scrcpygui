name: Build Platform-Specific Artifacts (Release)

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      # This matrix builds the app on all three major desktop platforms
      matrix:
        os: [windows-latest, ubuntu-22.04, macos-latest]
        include:
          - os: windows-latest
            platform: windows
          - os: ubuntu-22.04
            platform: linux
          - os: macos-latest
            platform: macos

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: 3.35.1
          cache: true

      - name: Prepare pubspec.yaml for Windows
        if: matrix.platform == 'windows'
        shell: pwsh
        run: |
          (Get-Content pubspec.yaml) | ForEach-Object {
            $_ -replace '    - assets/exec/linux/', '#    - assets/exec/linux/' `
               -replace '    - assets/exec/mac-intel/', '#    - assets/exec/mac-intel/' `
               -replace '    - assets/exec/mac-apple/', '#    - assets/exec/mac-apple/'
          } | Set-Content pubspec.yaml
          echo "--- Modified pubspec.yaml for Windows build ---"
          type pubspec.yaml

      - name: Prepare pubspec.yaml for Linux
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y plocate libayatana-appindicator3-dev 
          sed -i -e 's|    - assets/exec/windows/|#   - assets/exec/windows/|' \
                 -e 's|    - assets/exec/mac-intel/|#   - assets/exec/mac-intel/|' \
                 -e 's|    - assets/exec/mac-apple/|#   - assets/exec/mac-apple/|' pubspec.yaml
          echo "--- Modified pubspec.yaml for Linux build ---"
          cat pubspec.yaml

      - name: Prepare pubspec.yaml for macOS
        if: matrix.platform == 'macos'
        run: |
          sed -i '' -e 's|    - assets/exec/windows/|#   - assets/exec/windows/|' \
                    -e 's|    - assets/exec/linux/|#   - assets/exec/linux/|' pubspec.yaml
          echo "--- Modified pubspec.yaml for macOS build ---"
          cat pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Get app version
        if: matrix.platform == 'linux'
        id: get_version
        # Extracts version from pubspec.yaml (e.g., 1.2.3+4) and sets it as an output
        run: echo "APP_VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT

      - name: Install FastForge
        run: dart pub global activate fastforge

      - name: Install AppImageTool
        if: matrix.platform == 'linux'
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          mv appimagetool /usr/local/bin/

      - name: Build AppImage
        if: matrix.platform == 'linux'
        run: |
          fastforge package \
            --platform=linux \
            --targets=appimage 



      # - name: Upload Windows Artifact
      #   if: matrix.platform == 'windows'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: windows-build
      #     path: build/windows/x64/runner/Release/
      #     if-no-files-found: error

      - name: Upload Linux Artifact
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage-${{ steps.get_version.outputs.APP_VERSION }}
          path: dist/${{ steps.get_version.outputs.APP_VERSION }}/scrcpygui-${{ steps.get_version.outputs.APP_VERSION }}-linux.AppImage
          if-no-files-found: error

      # - name: Upload macOS Artifact
      #   if: matrix.platform == 'macos'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: macos-build
      #     path: build/macos/Build/Products/Release/Scrcpy GUI.app
      #     if-no-files-found: error
